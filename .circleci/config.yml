version: 2
jobs:
    main:
        working_directory: ~/pulsar-current
        docker:
          - image: python:3.6.3
          - image: redis
        steps:
          - checkout
          - run:
              name: install packages
              command: ci/install.sh
          - run:
              name: test
              command: make compile && make test
    docs:
        working_directory: ~/docs
        docker:
          - image: python:3.6.3
        steps:
          - checkout
          - run:
              name: install enchant
              command: apt-get update && apt-get install enchant -y
          - run:
              name: install packages
              command: python setup.py install && pip install -r requirements/test-docs.txt
          - run:
              name: build docs
              command: make docs
          - run:
              name: docs spelling
              command: make docs-spelling
    coverage:
        working_directory: ~/pulsar-coverage
        docker:
          - image: python:3.6.3
          - image: redis
        steps:
          - checkout
          - run:
              name: install packages
              command: ci/install.sh
          - run:
              name: run and publish coverage
              command: make coverage && codecov
    legacy:
        working_directory: ~/pulsar-legacy
        docker:
          - image: python:3.5.4
          - image: redis
        steps:
          - checkout
          - run:
              name: install packages
              command: ci/install.sh
          - run:
              name: test
              command: make compile && make test
    build-dev:
        working_directory: ~/pulsar-dev
        docker:
          - image: python:3.7-rc
          - image: redis
        steps:
          - checkout
          - run:
              name: install packages
              command: ci/install.sh
          - run:
              name: test
              command: make compile && make test
    binaries:
        machine: true
        environment:
          - PYTHON_VERSIONS: 3.5 3.6 3.7 3.8
          - PYMODULE: pulsar
        steps:
          - checkout
          - run:
              name: install ci packages
              command: pip install -r requirements/ci.txt
          - run:
              name: check PyPI version
              command: make pypi-check
          - run:
              name: build linux wheels
              command: make wheels-linux
          - run:
              name: upload linux wheels
              command: make wheels-upload
    deploy-release:
        working_directory: ~/deploy
        docker:
          - image: python:3.6.3
        steps:
          - checkout
          - run:
              name: install packages
              command: ci/install.sh && make compile
          - run:
              name: download wheels
              command: make wheels-download
          - run:
              name: create source distribution
              command: python setup.py sdist
          - run:
              name: release source distribution
              command: twine upload dist/* --username lsbardel --password $PYPI_PASSWORD
          - run:
              name: release wheels
              command: twine upload wheelhouse/* --username lsbardel --password $PYPI_PASSWORD
          - run:
              name: tag
              command: ci/tag.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - main:
          filters:
            branches:
              ignore: deploy
            tags:
              ignore: /.*/
      - coverage:
          filters:
            branches:
              ignore: deploy
            tags:
              ignore: /.*/
      - legacy:
          filters:
            branches:
              ignore: deploy
            tags:
              ignore: /.*/
      - docs:
          filters:
            branches:
              ignore: deploy
            tags:
              ignore: /.*/
      - binaries:
          requires:
            - main
            - legacy
          filters:
            branches:
              only: release
            tags:
              ignore: /.*/
      - deploy-release:
          filters:
            branches:
              only: deploy
            tags:
              ignore: /.*/
